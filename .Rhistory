sarasota$GEO_ID <- sarasota$AFFGEOID
#merge dataset with shape file
datamap <- left_join(sarasota, dataclean, by = "GEO_ID")
#make a dataset of high schools in Sarasota
schools <- data.frame(ID = c(1, 2, 3, 4, 5, 6, 7),
School = c("Suncoast Polytech",
"Riverview",
"Sarasota Military",
"Booker",
"Sarasota High",
"North Port High",
"Pine View School"),
NAME.y = c("Census Tract 17.04,
Sarasota County, Florida",
"Census Tract 18.03,
Sarasota County, Florida",
"Census Tract 1.03,
Sarasota County, Florida",
"Census Tract 3,
Sarasota County, Florida",
"Census Tract 5.02,
Sarasota County, Florida",
"Census Tract 27.38,
Sarasota County Florida",
"Census Tract 21,
Sarasota County, Florida"),
STATEFP = c("School", "School", "School", "School",
"School", "School", "School"),
COUNTYFP = c("115", "115", "115", "115",
"115", "115", "115"),
TRACTCE = c("001704", "001803", "000102",
"000300","000502", "002724",
"002100"),
coordinates = c("c(-82.497670, 27.287130)",
"c(-82.520599, 27.282770)",
"c(-82.53861, 27.343857)",
"c(-82.53811, 27.365803)",
"c(-82.526390, 27.322920)",
"c(-82.22471, 27.071737)",
"c(-82.48063, 27.187479)"),
x = c(-82.497670, -82.520600, -82.53861, -82.53811,
-82.526390, -82.22471, -82.48063),
y = c(27.287130, 27.282770, 27.343857, 27.365803,
27.322920, 27.071737, 27.187479))
#merge it with spatial data and omit census tracts without schools
schools <- left_join(datamap, schools, by = "TRACTCE")
schools <- na.omit(schools)
datamap$STATEFP <- "Demographic Point"
schools$STATEFP.x <- "School"
#base plot
tmap_mode("plot")
roads <- opq("siesta key") %>%
add_osm_feature(key = "highway",
value = c("motorway", "primary", "motorway_link",
"primary_link", "trunk", "trunk_link",
"secondary", "tertiary", "secondary_link",
"tertiary_link")) %>%
osmdata_sf()
roads <- osm_poly2line(roads)
roads <- roads$osm_lines
o <- tm_shape(roads) +
tm_lines(); o
#bubble map
b1 <- o + tm_shape(schools) +
tm_dots("School",
palette=c("blue","cyan","skyblue","yellow",
"orange","red", "red4"),
size = 0.2); b1
b2 <- b1 +
tm_shape(datamap) +
tm_bubbles(col = "pink",
size = "Percent Hispanic",
jitter = .2,
scale = .5,
alpha = .9); b2
b3 <- b2 +
tm_shape(datamap) +
tm_bubbles(col = "purple4",
size = "Percent Black",
jitter = .2,
scale = .5,
alpha = .8); b3
b4 <- b3 +
tm_shape(datamap) +
tm_bubbles(col = "gray",
size = "Percent Asian",
jitter = .3,
scale = .5,
alpha = .1); b4
#asian only map
a1 <- tm_shape(datamap) +
tm_fill(col = "Proportion of Asian Residents",
palette = "Reds",
breaks = c(0, 1, 5, 10, 12),
labels=c("< 1%", "1% - 5%","5% - 10%", ">10%"),
colorNA = "grey50",
alpha = 0.7,
legend.reverse = FALSE) + o; a1
dataclean$`Proportion of Asian Residents` <- (dataclean$asian/dataclean$population)*100
#asian only map
a1 <- tm_shape(datamap) +
tm_fill(col = "Proportion of Asian Residents",
palette = "Reds",
breaks = c(0, 1, 5, 10, 12),
labels=c("< 1%", "1% - 5%","5% - 10%", ">10%"),
colorNA = "grey50",
alpha = 0.7,
legend.reverse = FALSE) + o; a1
#asian only map
a1 <- tm_shape(datamap) +
tm_fill(col = "Proportion of Asian Residents",
palette = "Reds",
breaks = c(0, 1, 5, 10, 12),
labels=c("< 1%", "1% - 5%","5% - 10%", ">10%"),
colorNA = "grey50",
alpha = 0.7,
legend.reverse = FALSE) + o; a1
library(tidyverse)
library(osmdata)
library(sf)
library(remotes)
library(tigris)
library(sp)
library(tmap)
library(tmaptools)
library(rosm)
library(OpenStreetMap)
setwd("/Users/annkothe/Documents/GitHub/SarasotaSchoolsProject")
#data, note: white data is non-hispanic
data <- read_csv(file="census.csv")
#clean the data
data$population <- data$DP05_0001E
data$asian <- data$DP05_0067E
data$black <- data$DP05_0065E
data$white <- data$DP05_0077E
data$pctasian <- data$DP05_0067PE
data$pctblack <- data$DP05_0065PE
data$pctwhite <- data$DP05_0064PE
data$pcthispanic <- data$DP05_0071PE
dataclean <- subset(data, select=c(GEO_ID, NAME, population, asian,
black, white, pcthispanic))
#make a pct minority variable and a majority minority group variable
dataclean$pctMinority <- (dataclean$asian + dataclean$black)/dataclean$population
dataclean$mm <- as.integer(dataclean$asian > dataclean$black)
dataclean$mm[which(dataclean$mm > 0)] = "Asian"
dataclean$mm[which(dataclean$mm < 1)] = "Black"
dataclean$pctwhite <- (dataclean$white/dataclean$population)*100
dataclean$`Percent Black` <- (dataclean$black/dataclean$population)*100
dataclean$`Proportion of Asian Residents` <- (dataclean$asian/dataclean$population)*100
dataclean$newpct <- (dataclean$pctMinority*100)
suppressWarnings(dataclean$`Percent Hispanic` <- as.numeric(dataclean$pcthispanic))
#download shapefiles from tigris
sarasota <- tracts("FL", "Sarasota", cb = TRUE)
sarasota$GEO_ID <- sarasota$AFFGEOID
#merge dataset with shape file
datamap <- left_join(sarasota, dataclean, by = "GEO_ID")
#make a dataset of high schools in Sarasota
schools <- data.frame(ID = c(1, 2, 3, 4, 5, 6, 7),
School = c("Suncoast Polytech",
"Riverview",
"Sarasota Military",
"Booker",
"Sarasota High",
"North Port High",
"Pine View School"),
NAME.y = c("Census Tract 17.04,
Sarasota County, Florida",
"Census Tract 18.03,
Sarasota County, Florida",
"Census Tract 1.03,
Sarasota County, Florida",
"Census Tract 3,
Sarasota County, Florida",
"Census Tract 5.02,
Sarasota County, Florida",
"Census Tract 27.38,
Sarasota County Florida",
"Census Tract 21,
Sarasota County, Florida"),
STATEFP = c("School", "School", "School", "School",
"School", "School", "School"),
COUNTYFP = c("115", "115", "115", "115",
"115", "115", "115"),
TRACTCE = c("001704", "001803", "000102",
"000300","000502", "002724",
"002100"),
coordinates = c("c(-82.497670, 27.287130)",
"c(-82.520599, 27.282770)",
"c(-82.53861, 27.343857)",
"c(-82.53811, 27.365803)",
"c(-82.526390, 27.322920)",
"c(-82.22471, 27.071737)",
"c(-82.48063, 27.187479)"),
x = c(-82.497670, -82.520600, -82.53861, -82.53811,
-82.526390, -82.22471, -82.48063),
y = c(27.287130, 27.282770, 27.343857, 27.365803,
27.322920, 27.071737, 27.187479))
#merge it with spatial data and omit census tracts without schools
schools <- left_join(datamap, schools, by = "TRACTCE")
schools <- na.omit(schools)
datamap$STATEFP <- "Demographic Point"
schools$STATEFP.x <- "School"
#base plot
tmap_mode("plot")
roads <- opq("siesta key") %>%
add_osm_feature(key = "highway",
value = c("motorway", "primary", "motorway_link",
"primary_link", "trunk", "trunk_link",
"secondary", "tertiary", "secondary_link",
"tertiary_link")) %>%
osmdata_sf()
roads <- osm_poly2line(roads)
roads <- roads$osm_lines
o <- tm_shape(roads) +
tm_lines(); o
#bubble map
b1 <- o + tm_shape(schools) +
tm_dots("School",
palette=c("blue","cyan","skyblue","yellow",
"orange","red", "red4"),
size = 0.2); b1
b2 <- b1 +
tm_shape(datamap) +
tm_bubbles(col = "pink",
size = "Percent Hispanic",
jitter = .2,
scale = .5,
alpha = .9); b2
b3 <- b2 +
tm_shape(datamap) +
tm_bubbles(col = "purple4",
size = "Percent Black",
jitter = .2,
scale = .5,
alpha = .8); b3
b4 <- b3 +
tm_shape(datamap) +
tm_bubbles(col = "gray",
size = "Percent Asian",
jitter = .3,
scale = .5,
alpha = .1); b4
#asian only map
a1 <- tm_shape(datamap) +
tm_fill(col = "Proportion of Asian Residents",
palette = "Reds",
breaks = c(0, 1, 5, 10, 12),
labels=c("< 1%", "1% - 5%","5% - 10%", ">10%"),
colorNA = "grey50",
alpha = 0.7,
legend.reverse = FALSE) + o; a1
a2 <- a1 + tm_shape(schools) +
tm_dots("School",
palette=c("blue","cyan","skyblue",
"yellow","orange","red", "red4"),
size = 0.1) +
tm_layout(legend.outside = TRUE,
legend.outside.position = "right",
legend.position = c(0.25, 0.25),
main.title = "Sarasota, FL",
main.title.position = "left", frame = FALSE) +
tm_view(view.legend.position = c("right","bottom")); a2
#COVID-19 Deaths in Toronto, Ontario
#Created: November 13th, 2021
#By Angela Kothe
library(devtools)
library(mapcan)
library(tidyverse)
library(socviz)
library(scales)
library(cowplot)
library(gganimate)
library(ggmap)
library(dplyr)
library(animation)
library(glue)
library(sf)
library(rgdal)
library(transformr)
library(haven)
library(viridis)
library(av)
setwd("/Users/annkothe/Documents/GitHub/covid deaths")
#data
to <- readOGR("Neighbourhoods.shp")
to <- fortify(to)
covid <- read_dta("cleanedCOVID19fatalities.dta")
id <- read_csv(file = "neighborhoods.csv")
id$id <- as.character(id$id)
to$id <- as.character(to$id)
id <- inner_join(to, id, by = "id")
cases <-left_join(id, covid, by = "neighbourhood")
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = deaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
View(cases)
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
ease_aes("cubic-in-out"); c
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = dailytotal)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {cases$grosstotal}")  +
ease_aes("cubic-in-out"); c
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = dailytotal)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
ease_aes("cubic-in-out"); c
d <- c + transition_manual(frames = grosstotal) +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); c
d <- c + transition_manual(frames = grosstotal) +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); d
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}") +
animate(c, height = 800, width = 800, fps = 1) +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}") +
animate(c, height = 800, width = 800, fps = 1); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); c
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = deaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); c
covid <- read_dta("cleanedCOVID19fatalities.dta")
id <- read_csv(file = "neighborhoods.csv")
id$id <- as.character(id$id)
to$id <- as.character(to$id)
id <- inner_join(to, id, by = "id")
cases <-left_join(id, covid, by = "neighbourhood")
#
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = ndeaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); c
animate(c, height = 800, width = 800, fps = 1)
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths:
{cases$grosstotal[as.integer(closest_state)]}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths:
{cases$grosstotal[(closest_state)]}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths:
{closest_state}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths:", cases$grosstotal) +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
transition_manual(frames = grosstotal) +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {grosstotal}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {grosstotal}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {closest_state}"); c
ss
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {closest_state}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}"); c
animate(c, height = 800, width = 800, fps = 1, res = 90)
animate(c, height = 800, width = 800, fps = 1, res = 420)
animate(c, height = 1920, width = 1080, fps = 1, res = 420)
animate(c, height = 1920, width = 1080, fps = 1)
animate(c, height = 1920, width = 1780, fps = 1)
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_text(aes(x = long, y = lat, label = round(grosstotal)),
hjust=0, vjust=0, size = 4.5) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_text(aes(x = long, y = lat, label = round(cases$grosstotal)),
hjust=0, vjust=0, size = 4.5) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
geom_text(aes(x = long, y = lat, label = round(cases$grosstotal)),
hjust=0, vjust=0, size = 4.5) +
labs(subtitle = "Total Deaths: {current_frame}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
geom_text(aes(x = long, y = lat, label = grosstotal)) +
labs(subtitle = "Total Deaths: {current_frame}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
geom_text(aes(x = long, y = lat, label = cases$grosstotal)) +
labs(subtitle = "Total Deaths: {current_frame}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths:", label = cases$grosstotal); c
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = ndeaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths:"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
transition_reveal(grosstotal) +
labs(subtitle = "Total Deaths: {frame_along}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
transition_reveal(cases$grosstotal) +
labs(subtitle = "Total Deaths: {frame_along}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
transition_states(grosstotal) +
labs(subtitle = "Total Deaths: {next_state}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}"); c
d <- c + transition_states(grosstotal) +
labs(subtitle = "Total Deaths: {closest_state}"); d
d <- b + transition_states(grosstotal) +
labs(subtitle = "Total Deaths: {closest_state}"); d
