aes(long, lat, group = group,
fill = dailytotal)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {cases$grosstotal}")  +
ease_aes("cubic-in-out"); c
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = dailytotal)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
ease_aes("cubic-in-out"); c
d <- c + transition_manual(frames = grosstotal) +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); c
d <- c + transition_manual(frames = grosstotal) +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); d
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}") +
animate(c, height = 800, width = 800, fps = 1) +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}") +
animate(c, height = 800, width = 800, fps = 1); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); c
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = deaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); c
covid <- read_dta("cleanedCOVID19fatalities.dta")
id <- read_csv(file = "neighborhoods.csv")
id$id <- as.character(id$id)
to$id <- as.character(to$id)
id <- inner_join(to, id, by = "id")
cases <-left_join(id, covid, by = "neighbourhood")
#
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = ndeaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); c
animate(c, height = 800, width = 800, fps = 1)
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths:
{cases$grosstotal[as.integer(closest_state)]}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths:
{cases$grosstotal[(closest_state)]}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths:
{closest_state}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths:", cases$grosstotal) +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
transition_manual(frames = grosstotal) +
labs(subtitle = "Total Deaths: {current_frame}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {grosstotal}") +
ease_aes("cubic-in-out"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {grosstotal}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {closest_state}"); c
ss
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {closest_state}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths: {current_frame}"); c
animate(c, height = 800, width = 800, fps = 1, res = 90)
animate(c, height = 800, width = 800, fps = 1, res = 420)
animate(c, height = 1920, width = 1080, fps = 1, res = 420)
animate(c, height = 1920, width = 1080, fps = 1)
animate(c, height = 1920, width = 1780, fps = 1)
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_text(aes(x = long, y = lat, label = round(grosstotal)),
hjust=0, vjust=0, size = 4.5) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_text(aes(x = long, y = lat, label = round(cases$grosstotal)),
hjust=0, vjust=0, size = 4.5) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
geom_text(aes(x = long, y = lat, label = round(cases$grosstotal)),
hjust=0, vjust=0, size = 4.5) +
labs(subtitle = "Total Deaths: {current_frame}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
geom_text(aes(x = long, y = lat, label = grosstotal)) +
labs(subtitle = "Total Deaths: {current_frame}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
geom_text(aes(x = long, y = lat, label = cases$grosstotal)) +
labs(subtitle = "Total Deaths: {current_frame}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths:", label = cases$grosstotal); c
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = ndeaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
labs(subtitle = "Total Deaths:"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
transition_reveal(grosstotal) +
labs(subtitle = "Total Deaths: {frame_along}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
transition_reveal(cases$grosstotal) +
labs(subtitle = "Total Deaths: {frame_along}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
transition_states(grosstotal) +
labs(subtitle = "Total Deaths: {next_state}"); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}"); c
d <- c + transition_states(grosstotal) +
labs(subtitle = "Total Deaths: {closest_state}"); d
d <- b + transition_states(grosstotal) +
labs(subtitle = "Total Deaths: {closest_state}"); d
setwd("/Users/annkothe/Documents/GitHub/canada maps/language data")
data <- read_dta("elections1997to2019.dta")
library(devtools)
library(mapcan)
library(tidyverse)
library(socviz)
library(scales)
library(cowplot)
library(grid)
library(gridExtra)
library(foreign)
library(ggmap)
library(dplyr)
library(viridis)
setwd("/Users/annkothe/Documents/GitHub/canada maps/language data")
data <- read_dta("elections1997to2019.dta")
library(sf)
library(rgdal)
library(transformr)
setwd("/Users/annkothe/Documents/GitHub/canada maps/language data")
data <- read_dta("elections1997to2019.dta")
data <- read_dta("elections1997to2019.dta")
library(haven)
data <- read_dta("elections1997to2019.dta")
setwd("/Users/annkothe/Documents/GitHub/canada maps/language data")
library(devtools)
library(mapcan)
library(tidyverse)
library(socviz)
library(scales)
library(cowplot)
library(gganimate)
library(ggmap)
library(dplyr)
library(animation)
library(glue)
library(sf)
library(rgdal)
library(transformr)
library(haven)
library(viridis)
library(av)
setwd("/Users/annkothe/Documents/GitHub/covid deaths")
#data
to <- readOGR("Neighbourhoods.shp")
to <- fortify(to)
covid <- read_dta("cleanedCOVID19fatalities.dta")
id <- read_csv(file = "neighborhoods.csv")
id$id <- as.character(id$id)
to$id <- as.character(to$id)
id <- inner_join(to, id, by = "id")
cases <-left_join(id, covid, by = "neighbourhood")
#
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = ndeaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
View(to)
View(cases)
View(cases)
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}"); c
d <- b + transition_states(grosstotal) +
labs(subtitle = "Total Deaths: {closest_state}"); d
#COVID-19 Deaths in Toronto, Ontario
#Created: December 22nd, 2021
#By Angela Kothe
library(devtools)
library(mapcan)
library(tidyverse)
library(socviz)
library(scales)
library(cowplot)
library(gganimate)
library(ggmap)
library(dplyr)
library(animation)
library(glue)
library(sf)
library(rgdal)
library(transformr)
library(haven)
library(viridis)
library(av)
setwd("/Users/annkothe/Documents/GitHub/covid deaths")
#data
to <- readOGR("Neighbourhoods.shp")
to <- fortify(to)
covid <- read_dta("cleanedCOVID19fatalities.dta")
id <- read_csv(file = "neighborhoods.csv")
id$id <- as.character(id$id)
to$id <- as.character(to$id)
id <- inner_join(to, id, by = "id")
cases <-left_join(id, covid, by = "neighbourhood")
#
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = ndeaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame},
Total Deaths: {cases %>% filter(ndeaths == closest_state) %>% pull(grosstotal)} "); c
View(cases)
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame},
Total Deaths:
{cases %>% filter(ndeaths == current_frame) %>% pull(grosstotal)} "); c
warnings()
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame},
Total Deaths:
{cases %>% filter(date == current_frame) %>% pull(grosstotal)} "); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}, {closest_state} "); c
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}"); c
d <- c + labs(subtitle = '{cases$grosstotal[as.integer(closest_state)]}') +
transition_states(date,
transition_length = 0.1,
state_length = 0.1); d
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame},
Total Deaths: {cases %>% filter(date == current_frame) %>% pull(grosstotal)}"); c
warnings
warnings()
c <- b +
labs(title = "COVID-19 fatalities on {current_frame},
Total Deaths: {cases %>% filter(date == current_frame) %>% pull(grosstotal)}") +
transition_states(date,
transition_length = 0.1,
state_length = 0.1); c
c <- b +
labs(title = "COVID-19 fatalities on {closest_state},
Total Deaths: {cases %>% filter(date == closest_state) %>% pull(grosstotal)}") +
transition_states(date,
transition_length = 0.1,
state_length = 0.1); c
covid <- read_dta("cleanedCOVID19fatalities.dta")
id <- read_csv(file = "neighborhoods.csv")
id$id <- as.character(id$id)
to$id <- as.character(to$id)
id <- inner_join(to, id, by = "id")
cases <-left_join(id, covid, by = "neighbourhood")
#
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = deaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
ease_aes("cubic-in-out"); c
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
setwd("/Users/annkothe/Documents/GitHub/covid deaths")
#data
to <- readOGR("Neighbourhoods.shp")
to <- fortify(to)
covid <- read_dta("cleanedCOVID19fatalities.dta")
id <- read_csv(file = "neighborhoods.csv")
id$id <- as.character(id$id)
to$id <- as.character(to$id)
id <- inner_join(to, id, by = "id")
cases <-left_join(id, covid, by = "neighbourhood")
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = deaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = ndeaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = date) +
labs(title = "COVID-19 fatalities on {current_frame}") +
ease_aes("cubic-in-out"); c
cases <- cases %>%
unite("alldata", date:grosstotal, sep= "Total Deaths:",
remove = FALSE)
View(cases)
head()
paste0("COVID-19 fatalities on ", ndeaths)
View(cases)
paste0("COVID-19 fatalities on ", cases$ndeaths)
cases$date <- paste0("COVID-19 fatalities on ", cases$date)
cases$grosstotal <- paste0("Total Deaths: ", cases$grosstotal)
cols <- c("cases$date", "cases$grosstotal")
cases$data <- do.call(paste, c(cases[cols], sep=" \n"))
View(cases)
cases$data <- do.call(paste, c(cases[date, grosstotal], sep=" \n"))
cases$data <- do.call(paste, c(cases$date, cases$grosstotal, sep=" \n"))
cols <- c("date", "grosstotal")
cases$data <- do.call(paste, c(cases[cols], sep=" \n"))
c <- b + transition_manual(frames = data) +
labs(title = "{current_frame}") +
ease_aes("cubic-in-out"); c
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = ndeaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = data) +
labs(title = "{current_frame}") +
ease_aes("cubic-in-out"); c
animate(c, height = 800, width = 800, fps = 1)
library(devtools)
library(mapcan)
library(tidyverse)
library(socviz)
library(scales)
library(cowplot)
library(gganimate)
library(ggmap)
library(dplyr)
library(animation)
library(glue)
library(sf)
library(rgdal)
library(transformr)
library(haven)
library(viridis)
library(av)
setwd("/Users/annkothe/Documents/GitHub/covid deaths")
#data
to <- readOGR("Neighbourhoods.shp")
to <- fortify(to)
covid <- read_dta("cleanedCOVID19fatalities.dta")
id <- read_csv(file = "neighborhoods.csv")
id$id <- as.character(id$id)
to$id <- as.character(to$id)
id <- inner_join(to, id, by = "id")
cases <-left_join(id, covid, by = "neighbourhood")
cases$date <- paste0("COVID-19 fatalities on ", cases$date)
cases$grosstotal <- paste0("Total Deaths: ", cases$grosstotal)
cols <- c("date", "grosstotal")
cases$data <- do.call(paste, c(cases[cols], sep=" \n"))
a <- ggplot(to, mapping = aes(x = long, y = lat,
group = group)) +
geom_polygon(color = alpha("black", 1.5),
size = 0.2, fill = "white") +
coord_map(projection = "albers",  lat0 = 49,
lat1 = 75) +
theme_map(); a
b <- a + geom_polygon(data = cases,
aes(long, lat, group = group,
fill = ndeaths)) +
scale_fill_viridis_c(option = "magma",
direction = -1) +
theme(legend.title = element_blank()) +
labs(caption = "@AnnKothe \nsource: Open TO"); b
c <- b + transition_manual(frames = data) +
labs(title = "{current_frame}") +
ease_aes("cubic-in-out"); c
animate(c, height = 800, width = 800, fps = 1)
anim_save("covid122221.gif")
anim_save("covid122221.mp4")
